* {
	box-sizing: border-box;
}
@import url('https://fonts.googleapis.com/css?family=Poppins:200,300,400,500,600,700,800,900&display=swap');
// Load CSS Reset from NPM
// CSS resets "normalize" how browser styles are applied.
// Try commenting this out and saving. What changes in the browser?
@import "~normalize.css";

// An example of a partial.
// Check out the _typography.scss file to edit the CSS inside!
@import "typography";

// You can still write styles in this file too.
// Here's an example of how you could write media queries more easily with Sass.

$large-phone: 500px;
$tablet-vertical: 768px;
$desktop: 1200px;

// And some color variables.
// Look how much easier it is to keep track of what these are than hex codes!

$red: #ab424a;
$orange: #dd7c00;
$green: #3b975f;
$blue: #4261ab;

.body {
	margin: 0;
	padding: 0;
	font-family: 'Poppins', sans-serif;
}

.navigation {
	position: fixed;
	top: 0;
	left: 0;
	width: 100%;
	height: 100vh;
	background: #FCF9EE;
	transition: 0.2s;
	display: flex;
}
.navigation .navArea {
	position: relative;
	width: 50%;
	height: 100%;
	display: flex;
	justify-content: center;
	align-items: center;
}

.navigation .navArea ul li {
	list-style: none;
}

.navigation .navArea ul li a {
	font-size: 2em;
	font-weight: 600;
	text-decoration: none;
	color: rgba(0, 0, 0, 0.5);
}

.navigation .navArea ul li:hover a {
	color: rgba(45, 41, 41, 0.5)
}

.imgArea{
	position: relative;
	width: 50%;
	height: 100vh;
	background: #0e0b01;
}

.imgArea img {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	object-fit: cover;
}

.page-heading {
	color: $red;

// Sass lets you write your media queries inline if you want.
// This is why I'm always forgetting I have to put the class inside
// the media query in regular CSS. I never have to in Sass!
// I like combining these with variables to make it easier to read
// my media queries.

@media screen and (min-width: $large-phone) {
	color: $orange;
}

@media screen and (min-width: $tablet-vertical) {
	color: $green;
}

@media screen and (min-width: $desktop) {
	color: $blue;
}
}

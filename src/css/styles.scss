// Load CSS Reset from NPM
// CSS resets "normalize" how browser styles are applied.
// Try commenting this out and saving. What changes in the browser?
@import "~normalize.css";

// An example of a partial.
// Check out the _typography.scss file to edit the CSS inside!
@import "typography";
@import url('https://fonts.googleapis.com/css2?family=Cardo&display=swap');

// You can still write styles in this file too.
// Here's an example of how you could write media queries more easily with Sass.

$large-phone: 500px;
$tablet-vertical: 768px;
$desktop: 1200px;

// And some color variables.
// Look how much easier it is to keep track of what these are than hex codes!

$red: #ab424a;
$orange: #dd7c00;
$green: #3b975f;
$blue: #4261ab;

@import url("https://fonts.googleapis.com/css2?family=Open+Sans:wght@300&display=swap");

* {
	box-sizing: border-box;
}
// All text color

html,body {
	overflow-x: hidden;
}

a {
	text-decoration: none;
}
//main page/seasonal choice codes
.container {
	width: 80%;
	margin: auto;
	height: 100%;
	justify-content: center;
}

.bg {
	position: absolute;
	left: 0;
	top: 0;
	height: 100%;
	width: 100%;
	overflow: hidden;
	z-index: -1;
}

.bg::after {
	content: "";
	left: 0;
	top: 0;
	position: absolute;
	height: 100%;
	width: 100%;
	background-color: rgba(0, 0, 0, 0.589);
}
//main page/seasonal choice codes
.nbar {
	border: 60px;
	margin-top: 450px;
	display: grid;
	grid-template-columns: repeat(4, 1fr);
	width: 100%;
}

.nbar a {
	text-decoration: none;
	font-size: 40px;
	font-family: 'Cardo', sans-serif;
	color: rgba(255, 255, 255, 1);
}

.bg img {
	width: 100%;
	height: 100%;
	object-fit: cover;
}

.nbar p {
	color: rgba(255, 255, 255, 1);
	font-size: 12px;
	margin-right: 10px;
}

@keyframes anima {
	0% {
		opacity: 0.6;
		transform: scale(1);
	}

	100% {
		opacity: 1;
		transform: scale(1.1);
	}
}
//seasonal choice codes
.navArea ul li {
	list-style: none;
	font-size: 60px;
	font-weight: 1000;
	margin-top: 60px;
	font-family: 'Cardo', sans-serif;
}

.navArea ul li a {
	color: #fcf9ee;
}

nav ul {
	position: relative;
	left: 100px;
	top: 20px;
}

nav ul li {
	margin: 10px;
	font-size: 20px;
}

.SCnav a {
	color: #fcf9ee;
	font-family: 'Cardo', sans-serif;
	text-align: center;
	position: relative;

}

.SCnav h1 {
	color: #fcf9ee;
	font-family: 'Cardo', sans-serif;
	text-align: center;
}

//gallery page
.Gnav ul {
	background-color: #fcf9ee;
	margin-bottom: 0px;
	margin-top: 0px;
}

.Gh1 {
	color: rgba(9, 8, 4, 1);
	background-color: #fcf9ee;
	margin-bottom: 0px;
}

.column {
	background-color: #fcf9ee;
	display: grid;
	grid-template-columns: repeat(4, 1fr);
	width: 100%;
}

.column img {
	margin-top: 20px;
	width: 100%;
}
//about us page code
.about {
	background-color: #fcf9ee;
}

.about h2 {
	font-family: 'Cardo', sans-serif;
	font-size: 30px;
	font-weight: 1000;
}

.about p {
	font-family: 'Cardo', sans-serif;
	font-size: 20px;
}
//@media screen and (max-width: 800px) {
//.column {
//flex: 50%;
//max-width: 50%;
//}
//}
//.column {
//flex: 100%;
//max-width: 100%;
//}
// Sass lets you write your media queries inline if you want.
// This is why I'm always forgetting I have to put the class inside
// the media query in regular CSS. I never have to in Sass!
// I like combining these with variables to make it easier to read
// my media queries.

//@media screen and (min-width: $large-phone){ }

//@media screen and (min-width: $tablet-vertical){}

//@media screen and (min-width: $desktop){}

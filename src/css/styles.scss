
@import url('https://fonts.googleapis.com/css?family=Poppins:200,300,400,500,600,700,800,900&display=swap');
// Load CSS Reset from NPM
// CSS resets "normalize" how browser styles are applied.
// Try commenting this out and saving. What changes in the browser?
@import "~normalize.css";

// An example of a partial.
// Check out the _typography.scss file to edit the CSS inside!
@import "typography";
@import url('https://fonts.googleapis.com/css2?family=Cardo&family=Roboto:wght@300&display=swap');

// You can still write styles in this file too.
// Here's an example of how you could write media queries more easily with Sass.

$large-phone: 500px;
$tablet-vertical: 768px;
$desktop: 1200px;

// And some color variables.
// Look how much easier it is to keep track of what these are than hex codes!

$red: #ab424a;
$orange: #dd7c00;
$green: #3b975f;
$blue: #4261ab;

@import url("https://fonts.googleapis.com/css2?family=Open+Sans:wght@300&display=swap");

* {
	box-sizing: border-box;
}

a {
	text-decoration: none;
}

body {
	background-color: #fcf9ee;
}

.container {
	width: 80%;
	margin: auto;
	height: 100%;
	justify-content: center;
}

.bg {
	position: absolute;
	left: 0;
	top: 0;
	height: 100%;
	width: 100%;
	overflow: hidden;
	z-index: -1;
}

.bg::after {
	content: "";
	left: 0;
	top: 0;
	position: absolute;
	height: 100%;
	width: 100%;
	background-color: rgba(0, 0, 0, 0.589);
}

.nbar {
	margin-top: 450px;
	display: grid;
	grid-template-columns: repeat(4, 1fr);
	width: 100%;
}

.text {
	text-decoration: none;
	font-size: 40px;
	font-family: 'Poppins', sans-serif;
	color: aliceblue;
	border: 60px;
}

.bg img {
	width: 100%;
	height: 100%;
	object-fit: cover;
}

.container p {
	color: whitesmoke;
	font-size: 10px;
}

h1 {
	color: red;
}

@keyframes anima {
	0% {
		opacity: 0.6;
		transform: scale(1);
	}

	100% {
		opacity: 1;
		transform: scale(1.1);
	}
}

//seasonal choice codes
.navigation {
	position: fixed;
	top: 0;
	left: 0;
	width: 100%;
	height: 100vh;
	background: #111;
	transition: 0.2s;
	display: flex;
}

.navigation .navArea {
	position: relative;
	width: 50%;
	height: 100%;
	display: flex;
	justify-content: center;
	align-items: center;
}

.navigation .navArea ul li {
	list-style: none;
}

.navigation .navArea ul li::before {
	content: '';
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	background: #f00;
	z-index: -1;
	opacity: 0;
	transition: 0.5s;
}

.navigation .navArea ul li:nth-child(1)::before {
	background: #3b975f;
}

.navigation .navArea ul li:nth-child(2)::before {
	background: #ab424a;
}

.navigation .navArea ul li:nth-child(3)::before {
	background: #dd7c00;
}

.navigation .navArea ul li:nth-child(4)::before {
	background: #4261ab;
}

.navigation .navArea ul li:hover::before {
	opacity: 1;
}

.navigation .navArea ul li a {
	font-size: 3em;
	font-family: 600;
	text-decoration: none;
	color: rgba(255, 255, 255, 0.5);
}

.navigation .navArea ul li:hover a {
	color: rgba(255, 255, 255, 1);
}

// Sass lets you write your media queries inline if you want.
// This is why I'm always forgetting I have to put the class inside
// the media query in regular CSS. I never have to in Sass!
// I like combining these with variables to make it easier to read
// my media queries.

//@media screen and (min-width: $large-phone){ }

//@media screen and (min-width: $tablet-vertical){}

//@media screen and (min-width: $desktop){}
